        <style>
           :root {
             box-sizing: border-box;
           }

            .OverlayTwoItemsCharacter{  
                display: grid;
                grid-template-rows: 1fr;
                grid-template-columns: 1fr;
                grid-template-areas: "main";
            }

            .Padlock {
                display: none;
             }
            
            .DisableCustomize {
                visibility: hidden;
            }

            .displayVertical {
              display: flex;
              flex-direction: column;
            }

            .CharacterCustomizeMain {
              display: grid;
              grid-template-columns: [eyes-start SilhouetteBackground-start mouth-start silhouette-start] 1fr [ SilhouetteBackground-end silhouette-end eyes-end mouth-end];
              grid-template-rows: [eyes-start SilhouetteBackground-start] 20fr [eyes-end mouth-start] 20fr [mouth-end ] 20fr [SilhouetteBackground-end silhouette-start] 40fr [silhouette-end];
              border-radius: 10%;
                align-items:center;
                width:100%;
                height: 100%;
            }

            .CompleteCharacter {
              display: none;
              grid-template-columns: 1fr 1fr;
              grid-template-rows: 1fr 1fr; 
            }

            .eyes, .mouth {
                display: flex;
                justify-content: space-between;
                align-items:center;
            }

            .character {
                display: flex;
                flex-direction: column;
                align-items: center;
            }    
            

            .SilhouetteBackgroundContainer {
                align-self: center;
                grid-area: SilhouetteBackground;
                width: 100%;
            }

            .mouthselector {
              grid-area: mouth;
              width: 100%;
            }

            .eyesselector {
              grid-area: eyes;
              width: 100%;
            } 

            .silhouette {
              grid-area: silhouette;
              justify-content: center;
              align-items:flex-end;
                display:flex;
                align-self:end;
            }

            .silhouettePicker {
              object-fit: contain;
              width: 20%;
            }
                  
            button {
                cursor: pointer;
                border-radius: 0.1rem;      
            }

            .overlay {
                display: grid;
            }

            .LeftArrow {
              margin-left: 2%;
              background: url(/images/arrows/previous.png) no-repeat center;
              background-size: contain;
           }

        
          div.LeftArrow:hover {
              transform: scale(1.1);
              cursor: pointer;
            }

            div.RightArrow:hover {
              transform: scale(1.1);
              cursor: pointer;
            }

            .RightArrow, .LeftArrow {
              width: 5vmin;
              height: 5vmin;
              transition: all 0.2s ease-in-out;
            }

            .ArrowDisabled {
              opacity: 0.4;
          }

            .RightArrow {
              margin-right: 2%;
                background: url(/images/arrows/next.png) no-repeat center;
                background-size: contain;
           }


        </style>

        <div class="CharacterCustomizeMain">

            <div class='SilhouetteBackgroundContainer'>
                    <img width=80% style='display: block; margin: 0 auto;' src='./images/silhouette/silhouette${
                        this.silhouette
                    }.png'>
            </div>

            <div class='eyesselector'>
                    <div class='eyes'>

                        <div id='ArrowEyesLeft' class="LeftArrow" on-click='${() => {
                            this.moveEyesLeft();
                        }}'>

                        </div>
                
                        <div style="width:30%"> 
                            <img width="100%"
                            src="./images/eyes/eyes${this.eyes}.png"> 
                        </div>

                        <div id='ArrowEyesRight'  class="RightArrow" on-click='${() =>
                            this.moveEyesRight()}'>
                        </div>

                    </div>
            </div>    


            <div class="mouthselector">
                <div class='mouth'> 

                    <div id="ArrowMouthLeft" class="LeftArrow"  on-click='${() =>
                        this.moveMouthLeft()}'></div>

                        <div style="width:30%"> 
                            <img id="mouth" style="width:100%;"
                            src="./images/mouths/mouth${this.mouth}.png"> 
                        </div>

                    <div id="ArrowMouthRight" class="RightArrow" on-click='${() =>
                        this.moveMouthRight()}'> </div>

                </div>
            </div>

            <div id='SilhouetteSelector' class='silhouette'>
                    
                    <div class="OverlayTwoItemsCharacter silhouettePicker">
                        <img style="grid-area:main;width:100%" class="sil1"
                                on-click='${() => this.PickSilhouetee(1)}'  
                                    src="./images/silhouette/silhouette1.png">
                        <i style="grid-area:main;z-index:2" class="fa fa-lock lock1">Locked</i>
                    </div>

                    <div class="OverlayTwoItemsCharacter silhouettePicker">
                        <i style="grid-area:main;z-index:2" class="fa fa-lock lock2">Locked</i>

                        <img style="grid-area:main;width:100%" class="sil2"
                                on-click='${() => this.PickSilhouetee(2)}'  
                                            src="./images/silhouette/silhouette2.png">
                    </div>

                    <div class="OverlayTwoItemsCharacter silhouettePicker">
                        <img style="grid-area:main;width:100%" class="sil3"
                                on-click='${() => this.PickSilhouetee(3)}' 
                                    src="./images/silhouette/silhouette3.png">
                        <i style="grid-area:main;z-index:2" class="fa fa-lock lock3">Locked</i>
                    </div>
                    <div class="OverlayTwoItemsCharacter silhouettePicker">
                        <img style="grid-area:main;width:100%" class="sil4"
                                on-click='${() =>
                                    this.PickSilhouetee(
                                    4
                                    )}'  src="./images/silhouette/silhouette4.png">
                        <i style="grid-area:main;z-index:2" class="fa fa-lock lock4">Locked</i>
                    </div>
            </div> 
    
        </div>